{"version":3,"file":"component---src-templates-docs-page-template-js-content-file-path-home-runner-work-excaliburjs-github-io-excaliburjs-github-io-docs-08-collision-groups-mdx-d199f305bef0b77ff11b.js","mappings":"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","sources":["webpack://excaliburjs.github.io/./docs/08-collision-groups.mdx","webpack://excaliburjs.github.io/./src/templates/DocsPageTemplate.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Collision groups are useful when you want to filter the collision that are possible between colliders\\non a granular level above and beyond collision type. This idea is also known as collision layers, collision filters, or collision filtering.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token comment\\\">// Create a group for each distinct category of \\\"collidable\\\" in your game</span>\\n<span class=\\\"token keyword\\\">const</span> playerGroup <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span>CollisionGroupManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'player'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> npcGroup <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span>CollisionGroupManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'npcGroup'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> floorGroup <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span>CollisionGroupManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'floorGroup'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">const</span> enemyGroup <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span>CollisionGroupManager<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'enemyGroup'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\">// Define your rules</span>\\n<span class=\\\"token keyword\\\">const</span> playersCanCollideWith <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span>CollisionGroup<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">collidesWith</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span>\\n  playersGroup<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// collide with other players</span>\\n  floorGroup<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// collide with the floor</span>\\n  enemyGroup<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// collide with enemies</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> enemiesCanCollideWith <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span>CollisionGroup<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">collidesWith</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span>\\n  playerGroup<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// collide with players</span>\\n  floorGroup<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// collide with the floor</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> npcGroupCanCollideWith <span class=\\\"token operator\\\">=</span> ex<span class=\\\"token punctuation\\\">.</span>CollisionGroup<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">collidesWith</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span>\\n  floorGroup<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// only collides with the floor</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> player <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Actor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  collisionGroup<span class=\\\"token operator\\\">:</span> playersCanCollideWith<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> npc <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Actor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  collisionGroup<span class=\\\"token operator\\\">:</span> npcGroupCanCollideWith<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> enemy <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Actor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  collisionGroup<span class=\\\"token operator\\\">:</span> enemiesCanCollideWith<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">const</span> floor <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Actor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  pos<span class=\\\"token operator\\\">:</span> ex<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">vec</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  width<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span>\\n  height<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span>\\n  collisionGroup<span class=\\\"token operator\\\">:</span> floorGroup<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/excaliburjs.github.io/excaliburjs.github.io/docs/08-collision-groups.mdx\";\nimport React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {DocSearch} from '@docsearch/react';\nimport Layout from '../components/layout';\nimport Header from '../components/header';\nimport Note from '../components/docs/Note';\nimport Example from '../components/docs/Example';\nimport IFrameEmbed from '../components/docs/IFrameEmbed';\nimport CodeSandboxEmbed from '../components/docs/CodeSandboxEmbed';\nconst shortcodes = {\n  Link,\n  Note,\n  Example,\n  IFrameEmbed,\n  CodeSandboxEmbed\n};\nconst Toc = ({toc: pages, releases}) => React.createElement(\"div\", {\n  id: \"docs-toc\",\n  className: \"ui fluid vertical docs text menu\"\n}, React.createElement(\"a\", {\n  id: \"open-toc\",\n  className: \"ui button docs-open\",\n  href: \"#open-toc\"\n}, React.createElement(\"i\", {\n  className: \"hamburger icon\"\n}), ' ', React.createElement(\"span\", {\n  className: \"toc-closed\"\n}, \"Open\"), \" Table of Contents\"), React.createElement(\"a\", {\n  className: \"ui button docs-close\",\n  href: \"#docs-content\"\n}, React.createElement(\"i\", {\n  className: \"hamburger icon\"\n}), ' ', React.createElement(\"span\", {\n  className: \"toc-opened\"\n}, \"Close\"), \" Table of Contents\"), React.createElement(\"div\", {\n  id: \"user-guides\",\n  className: \"header item\"\n}, \" Documentation\"), (() => {\n  const sections = {};\n  for (let page of pages) {\n    if (!sections[page.frontmatter.section]) {\n      sections[page.frontmatter.section] = [];\n    }\n    sections[page.frontmatter.section].push(page);\n  }\n  return Object.keys(sections).map(section => React.createElement(React.Fragment, {\n    key: section\n  }, React.createElement(\"section\", null, React.createElement(Link, {\n    className: \"item active\",\n    style: {\n      fontSize: 1.2 + 'em'\n    },\n    to: sections[section][0].frontmatter.path\n  }, section), React.createElement(\"div\", {\n    className: \"sub item\"\n  }, React.createElement(\"div\", {\n    className: \"menu\"\n  }, sections[section].map(({frontmatter}) => React.createElement(Link, {\n    key: frontmatter.path,\n    activeClassName: \"active\",\n    className: \"item\",\n    style: {\n      fontSize: 1.0 + 'em'\n    },\n    to: frontmatter.path\n  }, frontmatter.title)))))));\n})(), React.createElement(\"a\", {\n  className: \"item\",\n  href: \"/examples/\"\n}, \" Examples\"), React.createElement(\"div\", {\n  className: \"header item\"\n}, \"API Reference\"), React.createElement(\"a\", {\n  className: \"item\",\n  href: \"/docs/api/edge/\"\n}, \" Edge (latest)\"), releases.map(release => React.createElement(\"a\", {\n  key: release.tag.name,\n  className: \"item\",\n  href: `/docs/api/${release.tag.name}/`\n}, release.tag.name)));\nconst Search = () => React.createElement(\"div\", {\n  className: \"docs-search\"\n}, React.createElement(DocSearch, {\n  apiKey: \"f8e274d9f62a3088bb54ab80f766d740\",\n  appId: \"IVI5ONIKWP\",\n  indexName: \"excaliburjs\"\n}));\nexport const Head = ({data}) => React.createElement(React.Fragment, null, React.createElement(\"title\", null, data.page.frontmatter.title), React.createElement(\"link\", {\n  rel: \"preconnect\",\n  href: \"https://IVI5ONIKWP-dsn.algolia.net\",\n  crossOrigin: \"true\"\n}), React.createElement(\"link\", {\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700\"\n}));\nfunction Template({data, children}) {\n  const {page, toc, github: {data: {repository: {releases}}}} = data;\n  const {frontmatter} = page;\n  return React.createElement(Layout, null, React.createElement(Header), React.createElement(\"div\", {\n    className: \"ui page stackable relaxed grid\"\n  }, React.createElement(\"div\", {\n    className: \"four wide column\"\n  }, React.createElement(Search), React.createElement(Toc, {\n    toc: toc.edges.map(e => e.node),\n    releases: releases.edges.map(r => r.node)\n  })), React.createElement(\"div\", {\n    className: \"twelve wide column\"\n  }, React.createElement(\"div\", {\n    className: \"ui left aligned container\"\n  }, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    id: \"docs-content\",\n    className: \"docs-content\"\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children))))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query DocsByPath($id: String!) {\n    github: githubData {\n      data {\n        repository {\n          releases {\n            edges {\n              node {\n                publishedAt\n                name\n                tag {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    toc: allMdx(sort: { internal: { contentFilePath: ASC } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            section\n          }\n        }\n      }\n    }\n\n    page: mdx(id: { eq: $id }) {\n      body\n      frontmatter {\n        path\n        title\n        section\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","div","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","shortcodes","Link","Note","Example","IFrameEmbed","CodeSandboxEmbed","Toc","toc","pages","releases","id","className","href","sections","page","frontmatter","section","push","keys","map","key","style","fontSize","to","path","activeClassName","title","release","tag","name","Search","DocSearch","apiKey","appId","indexName","Head","data","rel","crossOrigin","Template","children","github","repository","Layout","Header","edges","e","node","r","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}